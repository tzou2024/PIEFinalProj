#include <SpeedyStepper.h>
#include <stdlib.h>     /* atoi */

const char picture[] PROGMEM = {};

char myChar;
char mynextChar;
//String picture = "
int imgheight = 70;
int numberpink;

//
// pin assignments
//
const int LED_PIN = 13;
const int MOTOR_X_STEP_PIN = 2;
const int MOTOR_Y_STEP_PIN = 3;
const int MOTOR_Z_STEP_PIN = 4;
const int MOTOR_X_DIR_PIN = 5;
const int MOTOR_Y_DIR_PIN = 6;
const int MOTOR_Z_DIR_PIN = 7;
const int STEPPERS_ENABLE_PIN = 8;
const int LIMIT_SWITCH_X_PIN = 9;
const int LIMIT_SWITCH_Y_PIN = 10;
//const int LIMIT_SWITCH_Z_PIN = 11;
const int SPINDLE_ENABLE_PIN = 12;
const int SPINDLE_DIRECTION_PIN = 13;
int no_color = 88;
int blue_thresh = 59;
int red_thresh = 50;
int blue = blue_thresh + no_color;
int red = no_color - red_thresh;
int pos;
int servopos = 11;
int i = 1;
int shifty = 1;
int shiftx = 1;
int offset = -32;
#include <Servo.h>
Servo myservo;  // create servo object to control a servo


//
// create the stepper motor objects
//
SpeedyStepper stepperX;
SpeedyStepper stepperY;


void setup() 
{
  Serial.begin(9600); // opens serial port, sets data rate to 9600 bps

  //
  // setup the LED pin and enable print statements
  //
  pinMode(LED_PIN, OUTPUT);   
  pinMode(STEPPERS_ENABLE_PIN, OUTPUT);       // be sure to do this
  Serial.begin(9600);
  myservo.attach(servopos);  // attaches the servo on pin 9 to the servo object

  //
  // connect and configure the stepper motor to there IO pins
  //
  stepperX.connectToPins(MOTOR_X_STEP_PIN, MOTOR_X_DIR_PIN);
  stepperY.connectToPins(MOTOR_Y_STEP_PIN, MOTOR_Y_DIR_PIN);


  //
  // enable the stepper motors
  //
  digitalWrite(STEPPERS_ENABLE_PIN, LOW);     // be sure to do this
  myservo.write(no_color);
  delay(10000);
  stepperX.setSpeedInStepsPerSecond(600);
  stepperX.setAccelerationInStepsPerSecondPerSecond(30);
  stepperY.setSpeedInStepsPerSecond(1200);
  stepperY.setAccelerationInStepsPerSecondPerSecond(1000);
  stepperX.setStepsPerMillimeter(10);
  stepperY.setStepsPerMillimeter(28);
  stepperX.moveRelativeInMillimeters(-3);     

}


void red_dot()
{
  delay(15);
  myservo.write(red);              // tell servo to go to position in variable 'pos'
  delay(100);                       // waits 15ms for the servo to reach the position
  myservo.write(no_color);              // tell servo to go to position in variable 'pos'
  delay(15);                       // waits 15ms for the servo to reach the position
}

void blue_dot()
{
  delay(15);
  myservo.write(blue);              // tell servo to go to position in variable 'pos'
  delay(100);                       // waits 15ms for the servo to reach the position
  myservo.write(no_color);              // tell servo to go to position in variable 'pos'
  delay(15);                       // waits 15ms for the servo to reach the position
}

void move_up(int y){
   delay(30);
   stepperY.moveRelativeInMillimeters(-4* y);
   delay(50);  
}

void right_shift(int x){
  delay(15);
  stepperX.moveToPositionInMillimeters(-3 * x);
  delay(15);
}


void loop() {
  // put your main code here, to run repeatedly:
  for (long i = 1; i <= strlen_P(picture); i++){

    myChar = pgm_read_byte_near(picture + (i-1));
    Serial.println(i);
    if (myChar == '1'){
      red_dot();
      move_up(1);
      shifty ++;
      }


      
    else {
      mynextChar = pgm_read_byte_near(picture + (i));
      numberpink = 1;
      stepperY.moveRelativeInMillimeters(-32);
      while (mynextChar == '0'){
        numberpink ++;
        i ++;
        mynextChar = pgm_read_byte_near(picture + (i));
      }
      for (long j = 1; j <= numberpink; j++){    
      blue_dot();
      move_up(1);
      shifty ++;
    }
      stepperY.moveRelativeInMillimeters(36);   
      move_up(1); 
      numberpink = 1;
    }

    
    if (i % imgheight == 0){
         stepperY.moveToPositionInSteps(-4);
         stepperX.moveRelativeInMillimeters(-3);     
    }
    
    
    }
    delay(50);

    while(1){}
    }
    
 
